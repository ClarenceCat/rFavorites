{"version":3,"sources":["components/TopNav/TopNav.js","components/PostItem/PostItem.js","components/PostList/PostList.js","components/SearchBar/SearchBar.js","Pages/SearchPage.js","Pages/FavoritesPage.js","App.js","reportWebVitals.js","index.js"],"names":["TopNav","location","useLocation","className","icon","faRedditAlien","color","to","pathname","faSearch","faHeart","PostItem","post","savedPosts","likeClick","useState","image","buttonStyle","ButtonSettings","setButtonSettings","useEffect","find","exists","id","boldHeart","alt","src","thumbnail","author","title","faArrowAltCircleUp","ups","size","onClick","PostList","posts","SavedPosts","setSavedPosts","post_id","data","selectedPost","pop","push","localStorage","setItem","JSON","stringify","a","getItem","storageData","parse","setSaves","map","index","SearchBar","placeholder","value","SearchValue","setSearchValue","type","name","onChange","event","target","SearchPage","SearchResults","setSearchResults","Error","setError","onSubmit","preventDefault","fetch","then","res","json","postList","children","catch","err","FavoritesPage","Posts","setPosts","isMounted","post_list","forEach","console","log","getList","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2efe58c.chunk.js","sourcesContent":["// File: TopNav.js\r\n// Programmer: Daniel Grew\r\n// Description: This file contains the top nav used for this app\r\n\r\nimport React from 'react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport './TopNav.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faRedditAlien} from '@fortawesome/free-brands-svg-icons'\r\nimport {faSearch, faHeart} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function TopNav() {\r\n    const location = useLocation();\r\n    return (\r\n        <div className='top-nav'>\r\n            <div className='nav-logo'>\r\n            <span className='icon'><FontAwesomeIcon icon={faRedditAlien} color='#000' /></span>\r\n                <span>r/</span>Favorites\r\n                \r\n            </div>\r\n            <nav>\r\n                <ul className='nav-links'>\r\n                    <li><Link to='/' className={(location.pathname === '/') ? 'active': ''}>r/Search <FontAwesomeIcon icon={faSearch} /></Link></li>\r\n                    <li><Link to='/favorites' className={(location.pathname === '/favorites') ? 'active': ''}>r/Saved <FontAwesomeIcon icon={faHeart} /></Link></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","// PostItem.js\r\n// Programmer: Daniel Grew\r\n// Description: Item in the post list\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport './PostItem.css'\r\nimport {faHeart, faArrowAltCircleUp} from '@fortawesome/free-regular-svg-icons'\r\nimport {faHeart as boldHeart} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n\r\nexport default function PostItem({post, savedPosts, likeClick}) {\r\n\r\n    const [ButtonSettings, setButtonSettings] = useState({image: faHeart, color: '#DB7600', buttonStyle: 'add-btn'})\r\n\r\n    useEffect(() => {\r\n       if(savedPosts !== null){\r\n        savedPosts.find(exists => exists === post.id) ? setButtonSettings({image: boldHeart, color: '#fff', buttonStyle: 'add-btn-active'}) : setButtonSettings({image: faHeart, color: '#DB7600', buttonStyle: 'add-btn'})\r\n       }\r\n    }, [savedPosts, post.id])\r\n\r\n    return (\r\n        <div className='post-item'>\r\n            <div className='post-details'>\r\n                <img alt='reddit thumbnail' src={post.thumbnail} />\r\n                <div>\r\n                    <p className='author'>Author: <b>{post.author}</b></p>\r\n                    <h3 className='title'>{post.title}</h3>\r\n                    <p><FontAwesomeIcon icon={faArrowAltCircleUp} /> {post.ups}</p>\r\n                </div> \r\n            </div>\r\n            <button className={ButtonSettings.buttonStyle}><FontAwesomeIcon icon={ButtonSettings.image} size='2x' color={ButtonSettings.color} onClick={() => likeClick(post.id)}/></button>\r\n        </div>\r\n    )\r\n}\r\n","// File: PostList.js\r\n// Programmer: Daniel Grew\r\n// Description: List of Posts\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport './PostList.css'\r\nimport PostItem from '../PostItem/PostItem'\r\n\r\nexport default function PostList({posts}) {\r\n    const [SavedPosts, setSavedPosts] = useState(null)\r\n\r\n    useEffect( () => {\r\n        async function setSaves() {\r\n            const storageData = await localStorage.getItem('likedPosts')\r\n            storageData ? setSavedPosts(JSON.parse(storageData)) : setSavedPosts([])\r\n        }\r\n\r\n        setSaves();\r\n    }, [SavedPosts])\r\n\r\n    function likeClick(post_id){\r\n        // check current list for saved data\r\n        let data = SavedPosts;\r\n\r\n        // check if the user has already liked a post -> if yes then remove from list, else add to list\r\n        data.find(selectedPost => selectedPost === post_id) ? data.pop(post_id) : data.push(post_id)\r\n\r\n        // add array to localStorage\r\n        localStorage.setItem('likedPosts', JSON.stringify(data))\r\n\r\n        // update SavedPosts\r\n        setSavedPosts(data)\r\n    }\r\n    return (\r\n        <div className='post-list'>\r\n            {posts.map((post, index) => {\r\n                return <PostItem key={index} post={post} savedPosts={SavedPosts} likeClick={likeClick}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","// File: SearchBar.js\r\n// Programmer: Daniel Grew\r\n// Description: search bar component\r\n\r\nimport React from 'react'\r\nimport './SearchBar.css'\r\n\r\nexport default function SearchBar({placeholder, value}) {\r\n\r\n    const {SearchValue, setSearchValue} = value;\r\n    \r\n    // On change event for the Search input\r\n    function searchChanged(event) {\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='searchbar'>\r\n            <input type='text' name='searchInput' placeholder={placeholder} className='searchInput' value={SearchValue} onChange={searchChanged}></input>\r\n            <button type='submit' className='submit-btn'>Search</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport PostList from '../components/PostList/PostList'\r\nimport SearchBar from '../components/SearchBar/SearchBar'\r\nimport './Pages.css'\r\n\r\nexport default function SearchPage() {\r\n\r\n    const [SearchValue, setSearchValue] = useState(\"\")\r\n    const [SearchResults, setSearchResults] = useState(null)\r\n    const [Error, setError] = useState(null)\r\n\r\n\r\n    // onsubmit event - calls reddit api to retrieve searched items\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // attempt to fetch reddit data\r\n        fetch('http://www.reddit.com/r/' + SearchValue + '/hot.json?limit=9')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            const postList = data.data.children.map(data => data.data);\r\n            setSearchResults(postList);\r\n            setError(null)\r\n        })\r\n        .catch(err => {\r\n            setError('Could not find subreddit');\r\n            setSearchResults(null);\r\n            return\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='page'>\r\n            <h1>Search</h1>\r\n            <div className='search'>\r\n                <form className='searchform' onSubmit={onSubmit}>\r\n                    <SearchBar placeholder='e.g. memes' value={{SearchValue, setSearchValue}} />\r\n                </form>\r\n            </div>\r\n            <div className=\"result-list\">\r\n                {Error !== null ? (\r\n                    <div>{Error}</div>\r\n                ) : (\r\n                    <div>{SearchResults === null ? <p>Search a subreddit</p> : <PostList posts={SearchResults} />}</div>\r\n                ) }\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PostList from '../components/PostList/PostList';\r\n\r\nexport default function FavoritesPage() {\r\n\r\n    const [Posts, setPosts] = useState(null)\r\n    const [Error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        function getList(){\r\n\r\n            // get the list from localStorage\r\n            const savedPosts = JSON.parse(localStorage.getItem('likedPosts'));\r\n            let post_list = [];\r\n\r\n            // if its null then return (no saved posts)\r\n            if(!savedPosts){\r\n                return;\r\n            }\r\n            // loop through array and call reddit api, adding the response to the post list\r\n            savedPosts.forEach(post_id => {\r\n                fetch('https://www.reddit.com/comments/' + post_id + '/.json')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if(isMounted)\r\n                    {\r\n                        const post = data[0].data.children.map(data => data.data);\r\n                        post_list.push(post[0]);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setError('Error retrieving posts')\r\n                    console.log(err);\r\n                    post_list = [];\r\n                });\r\n            });\r\n\r\n            if(post_list !== [])\r\n            {\r\n                setPosts(post_list);\r\n            }\r\n        }\r\n\r\n        getList();\r\n\r\n        return () => { \r\n            setPosts(null);\r\n            isMounted = false; \r\n        };\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>Favorites</h1>\r\n            <div className='result-list'>\r\n            {Error !== null ? (\r\n                <div>{Error}</div>\r\n            ) : (\r\n                <div>{Posts === null ? <p>There are no favorites</p> : <PostList posts={Posts} /> }</div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport TopNav from './components/TopNav/TopNav';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport SearchPage from './Pages/SearchPage';\nimport FavoritesPage from './Pages/FavoritesPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <TopNav />\n        <Switch>\n          <Route exact path='/' component={SearchPage} />\n          <Route exact path='/favorites' component={FavoritesPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}